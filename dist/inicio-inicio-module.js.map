{"version":3,"sources":["./src/app/inicio/forget/forget.component.html","./src/app/inicio/login/login.component.html","./src/app/inicio/register/register.component.html","./src/app/helpers/must-match.validator.ts","./src/app/inicio/forget/forget.component.css","./src/app/inicio/forget/forget.component.ts","./src/app/inicio/inicio-routing.module.ts","./src/app/inicio/inicio.module.ts","./src/app/inicio/login/login.component.css","./src/app/inicio/login/login.component.ts","./src/app/inicio/register/register.component.css","./src/app/inicio/register/register.component.ts"],"names":[],"mappings":"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","file":"inicio-inicio-module.js","sourcesContent":["export default \"<div class=\\\"app-body\\\">\\n    <main class=\\\"main d-flex align-items-center\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-8 mx-auto\\\">\\n            <div class=\\\"card-group\\\">\\n              <div class=\\\"card p-4\\\">\\n                <div class=\\\"card-body\\\">\\n                  <form>\\n                    <h1>Recuperar senha</h1>\\n                    <p class=\\\"text-muted\\\">Entre com seu email</p>\\n                    <div class=\\\"input-group mb-3\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                      </div>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" autocomplete=\\\"username\\\" required>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-6\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\">Recuperar</button>\\n                      </div>\\n                      <div class=\\\"col-6 text-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-link px-0\\\">Login?</button>\\n                      </div>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:44%\\\">\\n                <div class=\\\"card-body text-center\\\">\\n                  <div>\\n                    <h2>Sign up</h2>\\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary active mt-3\\\">Register Now!</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </main>\\n  </div>\"","export default \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\" >\\n    <img src=\\\"assets/img/ativodigitais.png\\\" id=\\\"imagem\\\" style=\\\"width: 150px;  position: relative;  \\\" class=\\\"navbar-brand\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n     \\n      <li class=\\\"nav-item\\\">\\n        \\n      </li>\\n      \\n     \\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      \\n      \\n      \\n        <a href=\\\"/#/\\\" id=\\\"botao2\\\" style=\\\"border-radius: 20px; position: relative;  width: 150px;\\\" class=\\\"btn btn-outline-secondary\\\" aria-pressed=\\\"true\\\">PÃ¡gina inicial</a>\\n      \\n    </form>\\n  </div>\\n</nav>\\n  </div><br>\\n<div class=\\\"app-body\\\">\\n    <main class=\\\"main d-flex align-items-center\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-8 mx-auto\\\">\\n            \\n            <div class=\\\"card-group\\\">\\n              <div class=\\\"card p-4\\\">\\n                <div class=\\\"card-body\\\">\\n                  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"login()\\\">\\n                    <h1>Login</h1>\\n                    <p class=\\\"text-muted\\\">Entre com sua conta!</p>\\n                    <div class=\\\"input-group mb-3\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                      </div>\\n                      <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"data.username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\"  >\\n                      <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.email.errors.required\\\">Username Ã© obrigatÃ³rio</div>\\n                    </div>\\n                    </div>\\n                    <div class=\\\"input-group mb-4\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                      </div>\\n                      <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"data.password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" autocomplete=\\\"current-password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\n                      <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.password.errors.required\\\">Password Ã© obrigatÃ³rio</div>\\n                        <div *ngIf=\\\"f.password.errors.minlength\\\">Password tem que ter pelo menos 8 caracteres</div>\\n                    </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-6\\\">\\n                        <button  class=\\\"btn btn-primary px-4\\\">Login</button>\\n                      </div>\\n                      <div class=\\\"col-6 text-right\\\">\\n                        \\n                      </div>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:44%\\\">\\n                <div class=\\\"card-body text-center\\\">\\n                  <div>\\n                    <h2>NÃ£o tem conta?</h2>\\n                    <p>Crie uma conta e desfrute em nosso sistema totalmente profissional!.</p>\\n                    \\n                    <button type=\\\"button\\\" (click)=\\\"irregistre()\\\"  class=\\\"btn btn-primary active mt-3\\\">Registre agora!</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div><br>\\n            <div *ngIf=\\\"resposta != null\\\" >\\n              <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                Username ou password errados!\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n      </div>\\n    </main>\\n  </div>\"","export default \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\" >\\n    <img src=\\\"assets/img/ativodigitais.png\\\" id=\\\"imagem\\\" style=\\\"width: 150px;  position: relative;  \\\" class=\\\"navbar-brand\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n     \\n      <li class=\\\"nav-item\\\">\\n        \\n      </li>\\n      \\n     \\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      \\n      \\n      \\n        <a href=\\\"/#/\\\" id=\\\"botao2\\\" style=\\\"border-radius: 20px; position: relative;  width: 150px;\\\" class=\\\"btn btn-outline-secondary\\\" aria-pressed=\\\"true\\\">PÃ¡gina inicial</a>\\n      \\n    </form>\\n  </div>\\n</nav>\\n  </div><br>\\n<div class=\\\"app-body\\\">\\n    <main class=\\\"main d-flex align-items-center\\\" >\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\" >\\n          <div class=\\\"col-md-6 mx-auto\\\">\\n            <div class=\\\"card mx-4\\\">\\n              <div class=\\\"card-body p-4\\\">\\n                <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"create()\\\">\\n                  <h1>Registre</h1>\\n                  <p class=\\\"text-muted\\\">Crie sua conta aqui</p>\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                    </div>\\n                    <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"data.username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" autocomplete=\\\"username\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\">\\n                    <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"f.username.errors.required\\\">Username Ã© obrigatÃ³rio</div>\\n                  </div>\\n                  </div>\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">@</span>\\n                    </div>\\n                    <input type=\\\"text\\\" formControlName=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\"  [(ngModel)]=\\\"data.email\\\" name=\\\"email\\\" autocomplete=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n                    <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"f.email.errors.required\\\">Email Ã© obrigatorio</div>\\n                      <div *ngIf=\\\"f.email.errors.email\\\">NÃ£o Ã© um Email vÃ¡lido</div>\\n                  </div>\\n                  </div>\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                    </div>\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"data.password\\\" name=\\\"password\\\" autocomplete=\\\"new-password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\n                    <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"f.password.errors.required\\\">Password Ã© obrigatorio</div>\\n                      <div *ngIf=\\\"f.password.errors.minlength\\\">Password precisa ter pelo menos 8 caracteres</div>\\n                  </div>\\n                  </div>\\n                  <div class=\\\"input-group mb-4\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                    </div>\\n                    <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Repeat password\\\" autocomplete=\\\"new-password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\">\\n                    <div *ngIf=\\\"submitted && f.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"f.confirmPassword.errors.required\\\">ConfirmaÃ§Ã£o do password Ã© obrigatÃ³rio</div>\\n                      <div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">Password diferentes</div>\\n                  </div>\\n                  </div>\\n                  <button type=\\\"submit\\\"  class=\\\"btn btn-block btn-success\\\">Criar conta</button>\\n                </form>\\n                <div *ngIf=\\\"resposta != null\\\" >\\n                  <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                    <p> {{resposta}} </p>\\n                  </div>\\n                </div>\\n              </div>\\n             \\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </main>\\n  </div>\"","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luaWNpby9mb3JnZXQvZm9yZ2V0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forget',\n  templateUrl: './forget.component.html',\n  styleUrls: ['./forget.component.css']\n})\nexport class ForgetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { LoginComponent } from './login/login.component';\nimport { ForgetComponent } from './forget/forget.component';\n\n\nimport { Routes } from '@angular/router';\nimport { RouterModule } from  '@angular/router';\n\n\nimport { NgModule } from '@angular/core';\nimport { RegisterComponent } from './register/register.component';\n\n\n\nconst routes: Routes = [\n    { path: '', pathMatch: 'full', redirectTo: 'login' },\n    { path: 'login', component: LoginComponent },\n    { path: 'forget', component: ForgetComponent },\n    { path: 'register', component: RegisterComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InicioRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgetComponent } from './forget/forget.component';\nimport { InicioRoutingModule } from './inicio-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule }   from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, ForgetComponent],\n  imports: [\n    CommonModule,\n    InicioRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class InicioModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luaWNpby9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","import { InicioService } from './../../services/inicio.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Inicio } from '../../models/inicio';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  data:any;\n  palavra: any;\n  registerForm: FormGroup;\n    submitted = false;\n    username:any;\n    resposta: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    public InicioService: InicioService,\n    public router: Router,\n  ) { this.data = new Inicio(); }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n  }, \n  );\n  }\n\n  get f() { return this.registerForm.controls; }\n\n\n  login(){\n\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n    \n    this.InicioService.login(this.data).subscribe((response) => { \n      //localStorage.setItem('access_token', 'nenhum_no_momento'),\n      console.log(response);\n      \n      if(response){\n         localStorage.setItem('username', response.username),\n      localStorage.setItem('email', response.email),\n      localStorage.setItem('uid', response.uid),\n      localStorage.setItem('picture', response.picture),\n      this.InicioService.starttoken().subscribe((resposta) => {\n        localStorage.setItem('access_token', resposta.token),\n        \n        \n        document.location.reload(true);\n        this.router.navigate(['']);\n      });\n      this.router.navigate(['']);\n      }\n      \n      \n\n     \n    \n    },(err:HttpErrorResponse)=>{\n      this.resposta = 'tem tem';\n      console.log('erro')\n    });\n\n  }\n \n  irregistre(){\n    this.router.navigate(['login/register']);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luaWNpby9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","import { InicioService } from './../../services/inicio.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Inicio } from '../../models/inicio';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { MustMatch } from '../../helpers/must-match.validator';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\ndata:any;\nregisterForm: FormGroup;\nsubmitted = false;\nresposta: any;\n  constructor(\n    public InicioService: InicioService,\n    public router: Router,\n    private formBuilder: FormBuilder\n  ) { this.data = new Inicio();}\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', Validators.required]\n  }, {\n      validator: MustMatch('password', 'confirmPassword')\n  });\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  create(){\n\n    this.submitted = true;\n\n        // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        console.log('pare!');\n    }\n    else{\n      this.InicioService.register(this.data).subscribe((response) => {\n        this.resposta = 'Cadastro feito com sucesso! Eespere por favor...';\n        setTimeout(function() {\n          window.location.href = \"https://sandbox.wavesreport.com/#/login\";\n      }, 2000);\n      },(err:HttpErrorResponse)=>{\n        this.resposta = 'Erro! A base de dados jÃ¡ possui esse cadastro!';\n        console.log('erro')\n      });\n    }\n\n  }\n}\n"],"sourceRoot":"webpack:///"}